server:
  port: 8080
spring:
  datasource:
    url: ${DATASOURCE_URL}
    driverClassName: org.h2.Driver
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    function:
      definition: updateCommunication
    stream:
      bindings:
        sendCommunication-out-0:
          destination: counsel-send-communication
        updateCommunication-in-0:
          destination: counsel-communication-sent
          group: ${spring.application.name}
  rabbitmq:
    host: localhost
    port: 5672
    username: ${MQ_USERNAME}
    password: ${MQ_PASSWORD}
    connection-timeout: 10s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
logging:
  level:
    com:
      example:
        counselserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 5
